import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const u=JSON.parse('{"title":"Hashing","description":"","frontmatter":{},"headers":[],"relativePath":"docs/hashing.md","filePath":"docs/hashing.md"}'),n={name:"docs/hashing.md"},h=e(`<h1 id="hashing" tabindex="-1">Hashing <a class="header-anchor" href="#hashing" aria-label="Permalink to &quot;Hashing&quot;">​</a></h1><p><a name="introduction"></a></p><h2 id="introducao" tabindex="-1">Introdução <a class="header-anchor" href="#introducao" aria-label="Permalink to &quot;Introdução&quot;">​</a></h2><p>A <a href="./docs/facades.html">facade</a> <code>Hash</code> do Laravel fornece a encriptação de senha segura do Bcrypt e Argon2 para armazenar as senhas do usuário. Se você estiver usando um dos <a href="./docs/starter-kits.html">Kit Inicializador de Aplicação Laravel</a>, o Bcrypt será usado por padrão para registro e autenticação.</p><p>O bcrypt é uma ótima opção para fazer hash de senhas porque seu &quot;fator trabalho&quot; é ajustável, o que significa que o tempo que se leva para gerar um hash pode ser aumentado conforme a potência do hardware aumenta. Quando fazemos hash de senha, devemos ir com calma. Quanto mais tempo um algoritmo demora para fazer hash de uma senha, mais tempo os usuários maliciosos demoram para gerar a &quot;<em>rainbow tables</em>&quot; de todos os possíveis valores de hash de string que podem ser usados em ataques de força bruta contra aplicativos.</p><p><a name="configuration"></a></p><h2 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h2><p>Por padrão, o Laravel utiliza o <code>bcrypt</code> como driver de hashamento ao criptografar dados. No entanto, vários outros drivers de hashamento são suportados, incluindo <a href="https://en.wikipedia.org/wiki/Argon2" target="_blank" rel="noreferrer">Argon2</a> e <a href="https://en.wikipedia.org/wiki/Argon2" target="_blank" rel="noreferrer">argon2id</a>.</p><p>Você pode especificar o driver de hash da sua aplicação usando a variável de ambiente <code>HASH_DRIVER</code>. Mas se você quer personalizar todas as opções do driver de hash do Laravel, você deve publicar o arquivo de configuração completo de <code>hashing</code> usando o comando <code>config:publish</code> do Artisan.</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">php</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> artisan</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> config:publish</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> hashing</span></span></code></pre></div><p><a name="basic-usage"></a></p><h2 id="uso-basico" tabindex="-1">Uso Básico <a class="header-anchor" href="#uso-basico" aria-label="Permalink to &quot;Uso Básico&quot;">​</a></h2><p><a name="hashing-passwords"></a></p><h3 id="criptografia-de-senhas" tabindex="-1">Criptografia de senhas <a class="header-anchor" href="#criptografia-de-senhas" aria-label="Permalink to &quot;Criptografia de senhas&quot;">​</a></h3><p>Você pode hashear uma senha chamando o método <code>make</code> da facade <code>Hash</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App\\Http\\Controllers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Http\\RedirectResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Http\\Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\Hash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> PasswordController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * Atualize a senha do usuário.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> update</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RedirectResponse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">            // Valide o novo comprimento da senha...</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;password&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">newPassword)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/profile&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a name="adjusting-the-bcrypt-work-factor"></a></p><h4 id="ajustando-o-fator-de-trabalho-do-bcrypt" tabindex="-1">Ajustando o fator de trabalho do bcrypt <a class="header-anchor" href="#ajustando-o-fator-de-trabalho-do-bcrypt" aria-label="Permalink to &quot;Ajustando o fator de trabalho do bcrypt&quot;">​</a></h4><p>Se você estiver usando o algoritmo Bcrypt, o método <code>make</code> permite que você gerencie o fator de trabalho do algoritmo usando a opção <code>rounds</code>; contudo, o fator de trabalho padrão gerenciado pelo Laravel é aceitável para a maioria das aplicações.</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $hashed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;rounds&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 12</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span></code></pre></div><p><a name="adjusting-the-argon2-work-factor"></a></p><h4 id="ajustando-o-fator-de-trabalho-do-argon-2" tabindex="-1">Ajustando o Fator de Trabalho do Argon 2 <a class="header-anchor" href="#ajustando-o-fator-de-trabalho-do-argon-2" aria-label="Permalink to &quot;Ajustando o Fator de Trabalho do Argon 2&quot;">​</a></h4><p>Se estiver usando o algoritmo Argon2, o método <code>make</code> permite gerenciar o fator de trabalho do algoritmo com as opções <code>memory</code>, <code>time</code> e <code>threads</code>; no entanto, os valores padrão gerenciados pelo Laravel são aceitáveis para a maioria das aplicações:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    $hashed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;password&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;memory&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1024</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;time&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &#39;threads&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]);</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">NOTA</p><p>Para mais informações sobre essas opções, por favor, veja a documentação oficial do PHP sobre o hash de Argon (<a href="https://secure.php.net/manual/pt_BR/function.password-hash.php" target="_blank" rel="noreferrer">https://secure.php.net/manual/pt_BR/function.password-hash.php</a>).</p><p><a name="verifying-that-a-password-matches-a-hash"></a></p><h3 id="verificando-se-uma-senha-combina-com-um-hash" tabindex="-1">Verificando se uma Senha Combina com um Hash <a class="header-anchor" href="#verificando-se-uma-senha-combina-com-um-hash" aria-label="Permalink to &quot;Verificando se uma Senha Combina com um Hash&quot;">​</a></h3><p>O método <code>check</code> fornecido pelo facade <code>Hash</code> permite verificar se uma determinada string de texto corresponde a um determinado hash.</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">check</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;plain-text&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, $hashedPassword)) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // As senhas correspondem...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a name="determining-if-a-password-needs-to-be-rehashed"></a></p><h3 id="determine-se-uma-senha-precisa-ser-re-escrita" tabindex="-1">Determine se uma Senha Precisa Ser Re-escrita <a class="header-anchor" href="#determine-se-uma-senha-precisa-ser-re-escrita" aria-label="Permalink to &quot;Determine se uma Senha Precisa Ser Re-escrita&quot;">​</a></h3><p>O método <code>needsRehash</code> fornecido pela facade <code>Hash</code> permite que você determine se o fator de trabalho usado pelo <em>hasher</em> mudou desde que a senha foi encriptada. Algumas aplicações escolhem executar essa verificação durante o processo de autenticação da aplicação:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    if</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">needsRehash</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($hashed)) {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        $hashed </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Hash</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">make</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;plain-text&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a name="hash-algorithm-verification"></a></p><h2 id="verificacao-de-algoritmos-hash" tabindex="-1">Verificação de Algoritmos Hash <a class="header-anchor" href="#verificacao-de-algoritmos-hash" aria-label="Permalink to &quot;Verificação de Algoritmos Hash&quot;">​</a></h2><p>Para evitar manipulação de algoritmo de hash, o método <code>Hash::check</code> do Laravel verificará primeiro se o hash fornecido foi gerado usando o algoritmo de hash selecionado pela aplicação. Se os algoritmos forem diferentes, uma exceção <code>RuntimeException</code> será lançada.</p><p>Aqui está o comportamento esperado para a maioria das aplicações, onde o algoritmo de hash não deve ser alterado e diferentes algoritmos podem indicar um ataque malicioso. No entanto, se você precisar suportar vários algoritmos de hash dentro da sua aplicação, como quando migrando de um algoritmo para outro, você pode desativar a verificação do algoritmo de hash ao definir a variável de ambiente <code>HASH_VERIFY</code> para <code>false</code>:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HASH_VERIFY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=false</span></span></code></pre></div></div>`,25),t=[h];function p(o,l,r,d,k,c){return i(),s("div",null,t)}const m=a(n,[["render",p]]);export{u as __pageData,m as default};
