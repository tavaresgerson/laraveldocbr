import{_ as s,c as i,o as a,a4 as e}from"./chunks/framework.nQaBHiNx.js";const u=JSON.parse('{"title":"Laravel Pint","description":"","frontmatter":{},"headers":[],"relativePath":"docs/pint.md","filePath":"docs/pint.md"}'),n={name:"docs/pint.md"},t=e(`<h1 id="laravel-pint" tabindex="-1">Laravel Pint <a class="header-anchor" href="#laravel-pint" aria-label="Permalink to &quot;Laravel Pint&quot;">​</a></h1><p><a name="introduction"></a></p><h2 id="introducao" tabindex="-1">Introdução <a class="header-anchor" href="#introducao" aria-label="Permalink to &quot;Introdução&quot;">​</a></h2><p><a href="https://github.com/laravel/pint" target="_blank" rel="noreferrer">Laravel Pint</a> é um fixador de estilo de código PHP opinativo para minimalistas. O Pint é construído sobre o PHP-CS-Fixer e simplifica a garantia de que seu estilo de código permaneça limpo e consistente.</p><p>O Pint é instalado automaticamente com todos os novos aplicativos Laravel para que você possa começar a usá-lo imediatamente. Por padrão, o Pint não requer nenhuma configuração e corrigirá problemas de estilo de código em seu código seguindo o estilo de codificação opinativo do Laravel.</p><p><a name="installation"></a></p><h2 id="instalacao" tabindex="-1">Instalação <a class="header-anchor" href="#instalacao" aria-label="Permalink to &quot;Instalação&quot;">​</a></h2><p>O Pint está incluído em versões recentes do framework Laravel, portanto, a instalação geralmente é desnecessária. No entanto, para aplicativos mais antigos, você pode instalar o Laravel Pint via Composer:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">composer</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> require</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> laravel/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dev</span></span></code></pre></div><p><a name="running-pint"></a></p><h2 id="executando-o-pint" tabindex="-1">Executando o Pint <a class="header-anchor" href="#executando-o-pint" aria-label="Permalink to &quot;Executando o Pint&quot;">​</a></h2><p>Você pode instruir o Pint a corrigir problemas de estilo de código invocando o binário <code>pint</code> que está disponível no diretório <code>vendor/bin</code> do seu projeto:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span></span></code></pre></div><p>Você também pode executar o Pint em arquivos ou diretórios específicos:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/Models</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> app/Models/User.php</span></span></code></pre></div><p>O Pint exibirá uma lista completa de todos os arquivos que ele atualiza. Você pode ver ainda mais detalhes sobre as alterações do Pint fornecendo a opção <code>-v</code> ao invocar o Pint:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -v</span></span></code></pre></div><p>Se você quiser que o Pint simplesmente inspecione seu código em busca de erros de estilo sem realmente alterar os arquivos, você pode usar a opção <code>--test</code>. O Pint retornará um código de saída diferente de zero se algum erro de estilo de código for encontrado:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --test</span></span></code></pre></div><p>Se você quiser que o Pint modifique apenas os arquivos que têm alterações não confirmadas de acordo com o Git, você pode usar a opção <code>--dirty</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --dirty</span></span></code></pre></div><p>Se você quiser que o Pint corrija quaisquer arquivos com erros de estilo de código, mas também saia com um código de saída diferente de zero se algum erro for corrigido, você pode usar a opção <code>--repair</code>:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">./vendor/bin/pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --repair</span></span></code></pre></div><p><a name="configuring-pint"></a></p><h2 id="configurando-o-pint" tabindex="-1">Configurando o Pint <a class="header-anchor" href="#configurando-o-pint" aria-label="Permalink to &quot;Configurando o Pint&quot;">​</a></h2><p>Como mencionado anteriormente, o Pint não requer nenhuma configuração. No entanto, se você deseja personalizar as predefinições, regras ou pastas inspecionadas, você pode fazer isso criando um arquivo <code>pint.json</code> no diretório raiz do seu projeto:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;laravel&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Além disso, se você deseja usar um <code>pint.json</code> de um diretório específico, você pode fornecer a opção <code>--config</code> ao invocar o Pint:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --config</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> vendor/my-company/coding-style/pint.json</span></span></code></pre></div><p><a name="presets"></a></p><h3 id="predefinicoes" tabindex="-1">Predefinições <a class="header-anchor" href="#predefinicoes" aria-label="Permalink to &quot;Predefinições&quot;">​</a></h3><p>Predefinições definem um conjunto de regras que podem ser usadas para corrigir problemas de estilo de código no seu código. Por padrão, o Pint usa a predefinição <code>laravel</code>, que corrige problemas seguindo o estilo de codificação opinativo do Laravel. No entanto, você pode especificar uma predefinição diferente fornecendo a opção <code>--preset</code> para o Pint:</p><div class="language-shell vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pint</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --preset</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> psr12</span></span></code></pre></div><p>Se desejar, você também pode definir a predefinição no arquivo <code>pint.json</code> do seu projeto:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;psr12&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>As predefinições atualmente suportadas pelo Pint são: <code>laravel</code>, <code>per</code>, <code>psr12</code> e <code>symfony</code>.</p><p><a name="rules"></a></p><h3 id="regras" tabindex="-1">Regras <a class="header-anchor" href="#regras" aria-label="Permalink to &quot;Regras&quot;">​</a></h3><p>As regras são diretrizes de estilo que o Pint usará para corrigir problemas de estilo de código no seu código. Como mencionado acima, as predefinições são grupos predefinidos de regras que devem ser perfeitos para a maioria dos projetos PHP, então você normalmente não precisará se preocupar com as regras individuais que elas contêm.</p><p>No entanto, se desejar, você pode habilitar ou desabilitar regras específicas no seu arquivo <code>pint.json</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;preset&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;laravel&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;rules&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;simplified_null_return&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;braces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        &quot;new_with_braces&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;anonymous_class&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;named_class&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>O Pint é construído em cima do <a href="https://github.com/FriendsOfPHP/PHP-CS-Fixer" target="_blank" rel="noreferrer">PHP-CS-Fixer</a>. Portanto, você pode usar qualquer uma de suas regras para corrigir problemas de estilo de código no seu projeto: <a href="https://mlocati.github.io/php-cs-fixer-configurator" target="_blank" rel="noreferrer">PHP-CS-Fixer Configurator</a>.</p><p><a name="excluding-files-or-folders"></a></p><h3 id="excluindo-arquivos-pastas" tabindex="-1">Excluindo arquivos/pastas <a class="header-anchor" href="#excluindo-arquivos-pastas" aria-label="Permalink to &quot;Excluindo arquivos/pastas&quot;">​</a></h3><p>Por padrão, o Pint inspecionará todos os arquivos <code>.php</code> no seu projeto, exceto aqueles no diretório <code>vendor</code>. Se desejar excluir mais pastas, você pode fazer isso usando a opção de configuração <code>exclude</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;exclude&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;my-specific/folder&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Se desejar excluir todos os arquivos que contêm um determinado padrão de nome, você pode fazer isso usando a opção de configuração <code>notName</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;notName&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;*-my-file.php&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Se desejar excluir um arquivo fornecendo um caminho exato para o arquivo, você pode fazer isso usando a opção de configuração <code>notPath</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;notPath&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">        &quot;path/to/excluded-file.php&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p><a name="continuous-integration"></a></p><h2 id="integracao-continua" tabindex="-1">Integração contínua <a class="header-anchor" href="#integracao-continua" aria-label="Permalink to &quot;Integração contínua&quot;">​</a></h2><p><a name="running-tests-on-github-actions"></a></p><h3 id="acoes-do-github" tabindex="-1">Ações do GitHub <a class="header-anchor" href="#acoes-do-github" aria-label="Permalink to &quot;Ações do GitHub&quot;">​</a></h3><p>Para automatizar o linting do seu projeto com o Laravel Pint, você pode configurar <a href="https://github.com/features/actions" target="_blank" rel="noreferrer">Ações do GitHub</a> para executar o Pint sempre que um novo código for enviado ao GitHub. Primeiro, certifique-se de conceder &quot;permissões de leitura e gravação&quot; para fluxos de trabalho no GitHub em <strong>Configurações &gt; Ações &gt; Geral &gt; Permissões de fluxo de trabalho</strong>. Em seguida, crie um arquivo <code>.github/workflows/lint.yml</code> com o seguinte conteúdo:</p><div class="language-yaml vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">yaml</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Fix Code Style</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">push</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">jobs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">  lint</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    runs-on</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">ubuntu-latest</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    strategy</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      fail-fast</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">      matrix</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        php</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8.3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">    steps</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Checkout code</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">actions/checkout@v4</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Setup PHP</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">shivammathur/setup-php@v2</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          php-version</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">\${{ matrix.php }}</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          extensions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">json, dom, curl, libxml, mbstring</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          coverage</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">none</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Install Pint</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">composer global require laravel/pint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Run Pint</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        run</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">pint</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      - </span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">Commit linted files</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        uses</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">stefanzweifel/git-auto-commit-action@v5</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">        with</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">          commit_message</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Fixes coding style&quot;</span></span></code></pre></div>`,56),p=[t];function l(o,h,r,d,k,c){return a(),i("div",null,p)}const E=s(n,[["render",l]]);export{u as __pageData,E as default};
