import{_ as t,c as l,m as s,a as i,t as e,a4 as a,o as p}from"./chunks/framework.nQaBHiNx.js";const B=JSON.parse('{"title":"Blade","description":"","frontmatter":{},"headers":[],"relativePath":"docs/blade.md","filePath":"docs/blade.md"}'),h={name:"docs/blade.md"},k=a("",12),d={class:"info custom-block"},o=s("p",{class:"custom-block-title"},"NOTA",-1),r=s("code",null,"htmlspecialchars",-1),E=a("",6),c=s("code",null,"htmlspecialchars",-1),g=a("",5),y=s("code",null,"@",-1),u=a("",358);function m(n,F,v,b,C,A){return p(),l("div",null,[k,s("div",d,[o,s("p",null,[i("As instruções de eco "),s("code",null,e(),1),i(" do Blade são enviadas automaticamente através da função "),r,i(" do PHP para evitar ataques XSS.")])]),E,s("p",null,[i("Por padrão, as declarações de código Blade "),s("code",null,e(),1),i(" são enviadas automaticamente para a função PHP "),c,i(" para evitar ataques XSS. Se você não pretender que os seus dados sejam escapados, poderá utilizar a seguinte sintaxe:")]),g,s("p",null,[i("Nesse exemplo, o símbolo "),y,i(" será removido pelo Blade; no entanto, a expressão "),s("code",null,e(n.name),1),i(" permanecerá intocada pelo motor do Blade, permitindo que seja renderizada pelo seu framework JavaScript.")]),u])}const q=t(h,[["render",m]]);export{B as __pageData,q as default};
