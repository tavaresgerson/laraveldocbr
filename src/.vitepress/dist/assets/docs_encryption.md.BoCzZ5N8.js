import{_ as a,c as s,o as i,a4 as e}from"./chunks/framework.nQaBHiNx.js";const u=JSON.parse('{"title":"Criptografia","description":"","frontmatter":{},"headers":[],"relativePath":"docs/encryption.md","filePath":"docs/encryption.md"}'),n={name:"docs/encryption.md"},t=e(`<h1 id="criptografia" tabindex="-1">Criptografia <a class="header-anchor" href="#criptografia" aria-label="Permalink to &quot;Criptografia&quot;">​</a></h1><p><a name="introduction"></a></p><h2 id="introducao" tabindex="-1">Introdução <a class="header-anchor" href="#introducao" aria-label="Permalink to &quot;Introdução&quot;">​</a></h2><p>Os serviços de criptografia do Laravel fornecem uma interface simples e conveniente para encriptar e descriptografar texto usando o OpenSSL com AES-256 e AES-128. Todos os valores encriptados do Laravel são assinados usando um código de autenticação de mensagem (MAC), para que seu valor subjacente não possa ser modificado ou manipulado uma vez encriptado.</p><p><a name="configuration"></a></p><h2 id="configuracao" tabindex="-1">Configuração <a class="header-anchor" href="#configuracao" aria-label="Permalink to &quot;Configuração&quot;">​</a></h2><p>Antes de usar o encrypter do Laravel você deve definir a opção de configuração <code>key</code> em seu arquivo de configuração <code>config/app.php</code>. Este valor de configuração é influenciado pela variável de ambiente <code>APP_KEY</code>. Você deve usar o comando <code>php artisan key:generate</code> para gerar este valor, porque o comando <code>key:generate</code> irá utilizar o gerador de bytes aleatórios seguros do PHP para construir uma chave criptograficamente segura para sua aplicação. Normalmente, o valor da variável de ambiente <code>APP_KEY</code> será gerado por você durante a <a href="/docs/installation.html">instalação do Laravel</a>.</p><p><a name="gracefully-rotating-encryption-keys"></a></p><h3 id="chaves-de-criptografia-giratorias-graciosas" tabindex="-1">Chaves de Criptografia Giratórias Graciosas <a class="header-anchor" href="#chaves-de-criptografia-giratorias-graciosas" aria-label="Permalink to &quot;Chaves de Criptografia Giratórias Graciosas&quot;">​</a></h3><p>Se você alterar a chave de criptografia do seu aplicativo, todos os usuários autenticados serão desconectados automaticamente do seu aplicativo. Isto porque o Laravel encripta todos os cookies, incluindo os cookies de sessão. Além disso, não será mais possível descriptografar quaisquer dados que foram encriptados com sua antiga chave de criptografia.</p><p>Para mitigar esse problema, o Laravel permite que você liste suas chaves de criptografia anteriores na variável de ambiente <code>APP_PREVIOUS_KEYS</code> do seu aplicativo. Essa variável pode conter uma lista delimitada por vírgulas das suas chaves de criptografia anteriores:</p><div class="language-ini vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ini</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">APP_KEY</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;base64:J63qRTDLub5NuZvP+kb8YIorGS6qFYHKVo6u7179stY=&quot;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">APP_PREVIOUS_KEYS</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;base64:2nLsGFGzyoae2ax3EF2Lyq/hH6QghBGLIq5uL+Gp8/w=&quot;</span></span></code></pre></div><p>Quando você define esta variável de ambiente, o Laravel sempre utilizará a chave de criptografia atual ao criptografar valores. No entanto, quando os valores estão sendo descriptografados, o Laravel primeiro tentará com as chaves atuais e se a descriptografia falhar usando as chaves atuais, o Laravel tentar todas as chaves anteriores até que uma das chaves seja capaz de descriptografar o valor.</p><p>Este tipo de abordagem para descriptografar graciosamente permite que os usuários continuem usando seu aplicativo sem interrupções mesmo se sua chave de criptografia for girada.</p><p><a name="using-the-encrypter"></a></p><h2 id="usando-o-encrypter" tabindex="-1">Usando o Encrypter <a class="header-anchor" href="#usando-o-encrypter" aria-label="Permalink to &quot;Usando o Encrypter&quot;">​</a></h2><p><a name="encrypting-a-value"></a></p><h4 id="criptografar-um-valor" tabindex="-1">Criptografar um valor <a class="header-anchor" href="#criptografar-um-valor" aria-label="Permalink to &quot;Criptografar um valor&quot;">​</a></h4><p>Você pode criptografar um valor usando o <code>encryptString</code> método fornecido pela <em>facade</em> <code>Crypt</code>. Todos os valores criptografados são criptografados com OpenSSL e o AES-256-CBC. Além disso, todos os valores criptografados são assinados com uma mensagem código de autenticação (MAC). O código integrado de autenticação de mensagens evitará a descriptografia de qualquer valor que tenha sido adulterado por usuários maliciosos:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    &lt;?</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">php</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    namespace</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> App\\Http\\Controllers</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Http\\RedirectResponse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Http\\Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    class</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> DigitalOceanTokenController</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Controller</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        /**</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         * Armazene um token da API DigitalOcean para o usuário.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">         */</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">        public</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> store</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Request</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $request)</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> RedirectResponse</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            $request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">user</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">fill</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">([</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">                &#39;token&#39;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Crypt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($request</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">token),</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">            ])</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-&gt;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">save</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">            return</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> redirect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;/secrets&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div><p><a name="decrypting-a-value"></a></p><h4 id="descriptografando-um-valor" tabindex="-1">Descriptografando um Valor <a class="header-anchor" href="#descriptografando-um-valor" aria-label="Permalink to &quot;Descriptografando um Valor&quot;">​</a></h4><p>Você pode descriptografar valores usando o método <code>decryptString</code> fornecido pela <em>facade</em> <code>Crypt</code>. Se o valor não puder ser decifrado adequadamente, como quando a mensagem de código de autenticação é inválida, será lançada uma exceção <code>Illuminate\\Contracts\\Encryption\\DecryptException</code>:</p><div class="language-php vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">php</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Contracts\\Encryption\\DecryptException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    use</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Illuminate\\Support\\Facades\\Crypt</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    try</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        $decrypted </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Crypt</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">decryptString</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">($encryptedValue);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">catch</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DecryptException</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> $e) {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">        // ...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span></code></pre></div>`,24),r=[t];function p(o,l,h,d,c,k){return i(),s("div",null,r)}const E=a(n,[["render",p]]);export{u as __pageData,E as default};
